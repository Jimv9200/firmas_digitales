# Keycloak Config
server.port=8080
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://${KEYCLOAK_HOST:192.168.1.2:9090}/realms/spring-boot-real-dev
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://${KEYCLOAK_HOST:192.168.1.2:9090}/realms/spring-boot-real-dev/protocol/openid-connect/certs
spring.web.resources.static-locations=classpath:/static/
jwt.auth.converter.resource-id=spring-client-api-rest
jwt.auth.converter.principle-attribute=preferred_username
mi.variable.ejemplo=http://${KEYCLOAK_HOST:192.168.1.2:9090}

spring.security.oauth2.client.registration.google.client-id=843374280656-moeojm23th76d6a1jvn1tck5pelve4ve.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
logging.level.org.keycloak = DEBUG

#Data source
#Indica el driver/lib para conectar java a mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#Url donde está el servicio de tu mysql y el nombre de la base de datos
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:192.168.1.2}:3306/diplomado?serverTimezone=UTC
#Usuario y contraseña para tu base de datos descrita en la línea anterior
spring.datasource.username=root
spring.datasource.password=root
#[Opcional]Imprime en tu consola las instrucciones hechas en tu base de datos.
spring.jpa.show-sql = true
#[Opcional]Crea las tablas.
spring.jpa.hibernate.ddl-auto=update